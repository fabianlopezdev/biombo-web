# Netlify deployment configuration for Biombo Web monorepo
# This configuration deploys the Astro frontend with SSR

[build]
  # Base directory for the Astro frontend
  base = "astro-frontend"
  
  # Build command with verbose logging
  command = """
    echo '🔍 Build Environment Info:' && \
    echo 'Current directory:' && pwd && \
    echo 'Node version:' && node --version && \
    echo 'PNPM version:' && pnpm --version && \
    echo 'Environment variables:' && env | grep -E 'PUBLIC_|ASTRO_|NODE_ENV|NETLIFY|URL|DEPLOY' | sort && \
    echo '📦 Installing dependencies...' && \
    pnpm install && \
    echo '🏗️ Building Astro SSR app...' && \
    pnpm run build && \
    echo '📂 Build output (dist):' && \
    ls -la dist/ && \
    echo '📂 Checking for Netlify functions:' && \
    ls -la .netlify/functions/ 2>/dev/null || echo 'No .netlify/functions directory yet' && \
    ls -la netlify/functions/ 2>/dev/null || echo 'No netlify/functions directory yet' && \
    echo '📂 Checking _redirects file:' && \
    cat dist/_redirects 2>/dev/null || echo 'No _redirects file' && \
    echo '✅ Build complete!'
  """
  
  # Publish directory - relative to base
  publish = "dist"

[build.environment]
  # Node.js version for optimal performance and compatibility
  NODE_VERSION = "20"
  
  # Environment variables for production
  NODE_ENV = "production"
  
  # Enable Netlify Image CDN integration
  NETLIFY_USE_ASTRO = "true"
  
  # Astro-specific optimizations
  ASTRO_TELEMETRY_DISABLED = "1"

# Function settings for SSR
[functions]
  # Directory for Netlify Functions (relative to base directory)
  directory = "netlify/functions"
  
  # Use esbuild for better performance
  node_bundler = "esbuild"

# Headers for optimal performance and security
[[headers]]
  for = "/*"
  [headers.values]
    # Security headers
    X-Frame-Options = "DENY"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"

# Static asset caching
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# HTML pages - shorter cache for dynamic content
[[headers]]
  for = "/*.html"
  [headers.values]
    Cache-Control = "public, max-age=3600, s-maxage=31536000"

# API routes and SSR pages
[[headers]]
  for = "/api/*"
  [headers.values]
    Cache-Control = "no-cache, no-store, must-revalidate"

# Font optimization
[[headers]]
  for = "/*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"
    Access-Control-Allow-Origin = "*"

# Image optimization headers
[[headers]]
  for = "/*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.webp"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "/*.avif"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# Internationalization redirects
# [[redirects]]
#   from = "/"
#   to = "/ca/"
#   status = 302
#   conditions = {Language = ["ca"]}

# Note: SSR handles routing dynamically, so we don't need SPA fallback redirects
# The Netlify adapter will handle all routes through the SSR function

# Context-specific environment variables
[context.production.environment]
  NODE_ENV = "production"
  PUBLIC_ENV_MODE = "production"
  PUBLIC_SANITY_USE_CDN = "true"

[context.deploy-preview.environment]
  NODE_ENV = "production"
  PUBLIC_ENV_MODE = "staging"
  PUBLIC_SANITY_USE_CDN = "false"
  
[context.branch-deploy.environment]
  NODE_ENV = "production"
  PUBLIC_ENV_MODE = "staging"
  PUBLIC_SANITY_USE_CDN = "false"