---
import SingleProjectLayout from '@/layouts/pages/SingleProjectLayout.astro'
import { fetchProjectsByLocale } from '@/lib/sanity/queries/projectQueries'
import type { SupportedLocale } from '@/config/routing/projectRoutes'

export const prerender = true

export async function getStaticPaths() {
  const paths = []

  // English projects
  const enProjects = await fetchProjectsByLocale('en')
  enProjects.forEach((proj) => {
    // Strip the -en suffix for the URL path
    let cleanSlug = proj.slug.current
    if (cleanSlug.endsWith('-en')) {
      cleanSlug = cleanSlug.slice(0, -3)
    }

    paths.push({
      params: {
        lang: 'en',
        projects: 'projects',
        project: cleanSlug,  // Use clean slug for URL path
      },
      props: {
        locale: 'en',
        slug: proj.slug.current  // Keep original slug with suffix for querying
      },
    })
  })

  // Spanish projects
  const esProjects = await fetchProjectsByLocale('es')
  console.log('=== Spanish Projects Debug ===')
  esProjects.forEach((proj) => {
    console.log('Project title:', proj.title)
    console.log('Original slug from Sanity:', proj.slug.current)

    // Strip the -es suffix for the URL path
    let cleanSlug = proj.slug.current
    if (cleanSlug.endsWith('-es')) {
      cleanSlug = cleanSlug.slice(0, -3)
    }
    console.log('Clean slug for URL:', cleanSlug)
    console.log('---')

    paths.push({
      params: {
        lang: 'es',
        projects: 'proyectos',
        project: cleanSlug,  // Use clean slug for URL path
      },
      props: {
        locale: 'es',
        slug: cleanSlug  // Pass clean slug, query will handle suffix internally
      },
    })
  })

  return paths
}

const { locale, slug } = Astro.props as { locale: SupportedLocale; slug: string }
---

<SingleProjectLayout {slug} {locale} />
