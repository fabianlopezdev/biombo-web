---
import CustomCursor from '@/components/shared/CustomCursor.astro'
import OptimizedImage from '@/components/shared/OptimizedImage.astro'
import OptimizedVideo from '@/components/shared/OptimizedVideo.astro'
import type {
  FileWithResolvedAsset,
  ImageWithResolvedAsset,
} from '@/lib/sanity/schemas/projectSchema'
import { isVideoFile, getImageUrl, getMediaUrl } from '@/helpers/projects/projectHelpers'

interface Props {
  title: string
  // New prop: thumbnailMedia (can be image or video)
  thumbnailMedia?: FileWithResolvedAsset | ImageWithResolvedAsset | null
  // Legacy props (kept for backward compatibility)
  imageUrl?: string
  imageAlt?: string
  image?: any // Sanity image object with metadata for blur hash
  slug: string
  hoverColor?: string
  textHoverColor?: string
  viewProjectText?: string
  clients?: string
  class?: string
  projectId?: string
}

const {
  title,
  thumbnailMedia,
  imageUrl,
  imageAlt = title,
  image,
  slug,
  hoverColor = '#272727',
  textHoverColor = '#fff',
  viewProjectText = 'Veure projecte',
  clients,
  class: className = '',
  projectId,
} = Astro.props

// Determine if we're rendering a video or image
const isVideo =
  thumbnailMedia &&
  '_type' in thumbnailMedia &&
  thumbnailMedia._type === 'file' &&
  isVideoFile(thumbnailMedia as FileWithResolvedAsset)

// Get the appropriate URL and object for rendering
let mediaUrl = imageUrl || ''
let mediaObject = image

if (thumbnailMedia) {
  if (isVideo) {
    mediaUrl = getMediaUrl(thumbnailMedia as FileWithResolvedAsset)
    mediaObject = thumbnailMedia
  } else if ('_type' in thumbnailMedia && thumbnailMedia._type === 'image') {
    mediaUrl = getImageUrl(thumbnailMedia as ImageWithResolvedAsset)
    mediaObject = thumbnailMedia
  }
}

// Create a simple project object for CustomCursor
const project = {
  viewProjectText,
  hoverColor,
  textHoverColor,
}

// Generate unique IDs for ARIA relationships
const mobileInfoId = projectId ? `project-${projectId}-mobile-info` : undefined
const imageId = projectId ? `project-${projectId}-image` : undefined
---

<article
  class={`project project-card ${className}`}
  style={`--hover-bg-color: ${hoverColor}; --hover-text-color: ${textHoverColor};`}
>
  <a
    href={`${slug}`}
    class="project-link"
    aria-label={`${title}${clients ? ` - ${clients}` : ''} - Veure detalls del projecte`}
  >
    <figure class="project-figure">
      {
        isVideo ? (
          <OptimizedVideo
            video={mediaObject as FileWithResolvedAsset}
            class="project-image"
            id={imageId}
            aspectRatio={3 / 4}
          />
        ) : (
          <OptimizedImage
            id={imageId}
            src={mediaUrl}
            alt={imageAlt}
            image={mediaObject}
            class="project-image"
            loading="lazy"
            imageContext="card"
            aria-describedby={mobileInfoId}
          />
        )
      }
      <figcaption class="project-caption">
        <span class="caption-text" id={projectId ? `project-${projectId}-title` : undefined}>
          {title}
        </span>
      </figcaption>
    </figure>
    <div class="project-mobile-info" id={mobileInfoId} aria-hidden="false">
      <h3 class="project-mobile-title">{title}</h3>
      {clients && <p class="project-mobile-subtitle">{clients}</p>}
    </div>
  </a>
  <CustomCursor {project} viewProjectTextVal={viewProjectText} />
</article>

<style>
  .project-card {
    --cursor-size: 8.5625rem;
    position: relative;
    height: 100%;
    border-radius: 0.621875rem;
    overflow: hidden;
  }

  .project-link {
    display: block;
    width: 100%;
    height: 100%;
    /* border-radius: 0.621875rem; */
    overflow: hidden;
    position: relative;
    text-decoration: none;
    color: inherit;

    &:focus-visible {
      outline: 0.25rem solid var(--color-secondary);
      outline-offset: -0.25rem;
      border-radius: inherit;
    }

    /* Only hide cursor on devices that truly support hover (desktop) */
    @media (hover: hover) and (pointer: fine) {
      &:hover {
        cursor: none;
      }
    }
  }

  .project-figure {
    position: relative;
    margin: 0;
    /* border-radius: 0.621875rem; */
    /* border-radius: inherit; */
    overflow: hidden;
    height: 100%;
  }

  :global(.project-image) {
    width: 100%;
    height: 100%;
    object-fit: cover;
    display: block;
    border-radius: 0.621875rem;
  }

  /* Support for video thumbnails */
  :global(.project-image.optimized-video-wrapper) {
    width: 100%;
    height: 100%;
    border-radius: 0.621875rem;
  }

  :global(.project-image.optimized-video-wrapper .optimized-video) {
    border-radius: 0.621875rem;
  }

  /* Mobile info - hidden on desktop */
  .project-mobile-info {
    display: none;
  }

  .project-caption {
    position: absolute;
    inset: 0;
    background: var(--hover-bg-color);
    border-radius: 0.621875rem;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transform: scale(1.05);
    transition:
      opacity 0.5s ease,
      transform 0.5s ease;
    pointer-events: none;
    color: var(--hover-text-color);
    font-size: 2.375rem;
    text-align: center;
    z-index: 2;
  }

  .caption-text {
    color: var(--hover-text-color);
    transform: translateY(50%);
    transition: transform 0.5s ease;
  }

  .project-link:hover .caption-text {
    transform: translateY(0);
  }

  .project-link:is(:hover, :focus) {
    background-color: var(--hover-bg-color);

    .project-caption {
      opacity: 1;
      transform: scale(1);
    }
  }

  @media (width < 991px) {
    .project-card {
      height: auto; /* Reset height on mobile */
      border-radius: 0;
      max-width: 100%;
    }

    .project-link {
      display: flex;
      flex-direction: column;
      gap: 1.25rem;
      height: auto; /* Reset height on mobile */
      overflow: visible; /* Allow mobile info to show */
    }

    .project-figure {
      height: auto;
      border-radius: 0.621875rem;
    }

    .project-caption {
      font-size: 1.5rem;
    }

    :global(.project-image) {
      aspect-ratio: 318 / 386;
      width: 100%;
      max-width: 100%;
      object-fit: cover;
      border-radius: inherit;
    }

    /* Show mobile info on mobile */
    .project-mobile-info {
      display: block;
      padding-inline: 0;
    }

    .project-mobile-title {
      font-size: 1.25rem;
      font-weight: var(--font-weight-regular);
      padding-block-end: 0.5875rem;
      margin: 0;
      color: inherit;
    }

    .project-mobile-subtitle {
      font-size: 1rem;
      font-weight: var(--font-weight-light);
      line-height: 1;
      margin: 0;
      color: inherit;
    }
  }

  /* Disable hover effects on mobile/touch devices */
  @media (hover: none) and (pointer: coarse), (max-width: 991px) {
    .project-caption {
      display: none !important; /* Hide caption overlay on mobile */
    }

    .project-link {
      cursor: pointer !important; /* Ensure normal cursor on mobile */
    }

    .project-link:hover .caption-text {
      transform: none; /* Disable text animation */
    }

    .project-link:is(:hover, :focus) {
      background-color: transparent; /* No background change */
    }

    .project-link:is(:hover, :focus) .project-caption {
      opacity: 0; /* Keep caption hidden */
      transform: scale(1.05); /* Reset transform */
    }
  }
</style>
