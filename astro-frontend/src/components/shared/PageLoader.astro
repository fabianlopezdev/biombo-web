---
import BiomboIntroSVG from '@/assets/biombo-intro-loading.svg?raw'
---

<div id="page-loader" class="page-loader" data-loader-active>
  <!-- SVG Shape that scales -->
  <div class="loader-svg-container">
    <div class="loader-svg" set:html={BiomboIntroSVG} />
  </div>

  <!-- Text elements that don't scale -->
  <div class="loader-text">
    <span class="text-biombo">Biombo</span>
    <span class="text-studio">Studio</span>
  </div>
</div>

<style>
  /* ==========================================
   * LOADER TOGGLE: Change 'flex' to 'none' to disable loader
   * ========================================== */
  :root {
    --show-loader: flex;
  }

  /* Animation variables for easy tweaking */
  .page-loader {
    display: var(--show-loader); /* Controlled by toggle above */
    /* SVG Animation Variables */
    --svg-scale-duration: 2.5s;
    --svg-scale-delay: 1s;
    --svg-initial-scale: 0.2416; /* Scale down 1213px to display as 530px (530/1213) */
    --svg-final-scale: 2.6; /* Much less extreme scaling, was 6 */

    /* Text Reveal Animation Variables */
    --text-reveal-duration: 1s;
    --text-reveal-delay: 0.2s;

    /* Text Diverge Animation Variables */
    --text-diverge-duration: 5s;
    --text-diverge-delay: 1s;
    --text-diverge-distance: 100vw;
    --text-diverge-opacity-start: 1;
    --text-diverge-opacity-end: 0; /* Set to 1 for no fade, 0 for full fade */
    --text-fade-duration-percentage: 60%; /* Fade completes at this % of diverge animation */

    /* Overall timing */
    --loader-total-duration: 2200;

    /* Easing function */
    --animation-easing: cubic-bezier(0.19, 1, 0.22, 1);

    /* Component styles */
    position: fixed;
    top: 0;
    left: 0;
    width: 100vw;
    height: 100vh;
    background-color: var(--color-secondary, #191919);
    z-index: 9999;
    align-items: center;
    justify-content: center;
    pointer-events: all;
    opacity: 1;
    transition: opacity var(--loader-fade-duration) var(--animation-easing);
  }

  .page-loader[data-loader-complete] {
    opacity: 0;
    pointer-events: none;
  }

  .loader-svg-container {
    position: absolute;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1213px; /* New larger SVG width */
    height: 818px; /* New larger SVG height */
    transform: scale(var(--svg-initial-scale));
    animation: scaleUp var(--svg-scale-duration) var(--animation-easing) var(--svg-scale-delay)
      forwards;
  }

  .loader-svg {
    width: 100%;
    height: 100%;
  }

  .loader-svg :global(svg) {
    width: 100%;
    height: 100%;
    /* Improve rendering quality */
    shape-rendering: geometricPrecision; /* Better precision for scaling */
    /* Removed GPU acceleration properties that might cause rasterization at original size */
    /* Since we're now scaling less dramatically (2.6x vs 6x), we don't need forced GPU */
  }

  .loader-text {
    position: absolute;
    z-index: 2;
    display: flex;
    gap: 0.5rem;
    font-size: 1.875rem;
    font-weight: var(--font-weight-bold);
    color: var(--color-secondary, #191919); /* Black text on white SVG */
    /* Unified text animation */
    clip-path: inset(0 100% 0 0); /* Hidden initially, will reveal left to right */
    animation:
      /* First animation: Reveal entire text from left to right */
      revealFromLeft var(--text-reveal-duration) var(--animation-easing) var(--text-reveal-delay)
        forwards,
      /* Second animation: Move entire text to the left while SVG scales */ divergeLeft
        var(--text-diverge-duration) var(--animation-easing) var(--text-diverge-delay) forwards;
  }

  .text-biombo,
  .text-studio {
    display: inline-block;
  }

  /* Text reveal animation: wipes from left edge to right */
  @keyframes revealFromLeft {
    0% {
      clip-path: inset(0 100% 0 0); /* Fully hidden */
    }
    100% {
      clip-path: inset(0 0 0 0); /* Fully revealed */
    }
  }

  /* Text diverge animation: smooth movement left with controlled fade timing */
  @keyframes divergeLeft {
    from {
      transform: translateX(0);
      opacity: var(--text-diverge-opacity-start);
    }
    60% {
      /* Fade completes at 60% (3s of 5s animation) */
      transform: translateX(-60vw); /* 60% of total distance */
      opacity: var(--text-diverge-opacity-end); /* Fully faded by this point */
    }
    to {
      transform: translateX(calc(var(--text-diverge-distance) * -1));
      opacity: var(--text-diverge-opacity-end); /* Stay faded */
    }
  }

  /* SVG scale animation: grows from initial size to fill viewport */
  @keyframes scaleUp {
    from {
      transform: scale(var(--svg-initial-scale));
    }
    to {
      transform: scale(var(--svg-final-scale));
    }
  }

  /* Hide loader for users who prefer reduced motion */
  @media (prefers-reduced-motion: reduce) {
    .page-loader {
      display: none;
    }
  }

  /* Responsive adjustments */
  @media (max-width: 768px) {
    .page-loader {
      /* Override variables for mobile */
      --text-diverge-distance: 300px;
      --svg-initial-scale: 0.241; /* Scale down to show as 293px on mobile (293/1213) */
      --svg-final-scale: 1.7; /* Reduced from 4, proportionally scaled */
    }

    .loader-text {
      font-size: 20px;
      gap: 0.3rem;
    }

    /* Keep the larger base size, just scale it down more on mobile */
    .loader-svg-container {
      width: 1213px;
      height: 818px;
    }
  }

  /*
   * Aspect-ratio based scaling for vertical screens
   * The SVG base is now 1213×818 (1.48:1) horizontal aspect ratio
   * On vertical screens, we need larger scale values to fill the height
   * All scale values reduced proportionally (divided by ~2.3) for the larger base SVG
   */

  /* Square and slightly tall screens (1:1 to 3:4 aspect ratio) */
  /* Example: iPad Pro 12.9" (1024×1366, exactly 3:4), some tablets */
  @media (max-width: 1100px) and (max-aspect-ratio: 1/1) and (min-aspect-ratio: 3/4) {
    .page-loader {
      --svg-final-scale: 4.3; /* Was 10, now 4.3 (10/2.3) */
    }
  }

  /* Tall screens (3:4 to 9:16 aspect ratio) */
  /* Example: Most tablets in portrait, some older phones */
  @media (max-width: 1100px) and (max-aspect-ratio: 3/4) and (min-aspect-ratio: 9/16) {
    .page-loader {
      --svg-final-scale: 4.3; /* Was 10, now 4.3 */
      --text-diverge-distance: 120vw;
    }
  }

  /* Very tall screens (9:16 to 9:20 aspect ratio) */
  /* Example: iPhone 12/13/14, most modern Android phones */
  @media (max-width: 1100px) and (max-aspect-ratio: 9/16) and (min-aspect-ratio: 9/20) {
    .page-loader {
      --svg-final-scale: 4.8; /* Was 11, now 4.8 */
      --text-diverge-distance: 140vw;
    }
  }

  /* Extremely tall screens (9:20 or taller) */
  /* Example: iPhone 14 Pro, Samsung S23 Ultra */
  @media (max-width: 1100px) and (max-aspect-ratio: 9/20) {
    .page-loader {
      --svg-final-scale: 5.2; /* Was 12, now 5.2 */
      --text-diverge-distance: 150vw;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const loader = document.getElementById('page-loader')
    if (!loader) return

    /* Animation Timeline:
     * 0s     : Page loads, SVG visible at 530x357px
     * 0.5s   : Text starts revealing
     * 2s     : Text fully revealed
     * 2s     : SVG starts scaling + text starts diverging (simultaneous)
     * 5s     : Animations complete
     * 5s     : Loader starts fading out
     * 5.6s   : Loader removed from DOM
     */

    // Get the total duration from CSS variable
    const loaderStyles = getComputedStyle(loader)
    const animationDuration = parseInt(loaderStyles.getPropertyValue('--loader-total-duration'))

    // Mark loader as complete after animation
    setTimeout(() => {
      debugger
      loader.setAttribute('data-loader-complete', '')

      // Remove loader from DOM after fade out
      setTimeout(() => {
        loader.remove()
      }, 600) // Match the opacity transition duration
    }, animationDuration)
  })
</script>
