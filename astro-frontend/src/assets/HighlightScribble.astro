---
import type { HTMLAttributes } from 'astro/types';

interface Props extends HTMLAttributes<'svg'> {
  color?: string;
  top?: string | null;
  animateOnReveal?: boolean; // New prop to control animation trigger
}

const { 
  color = 'currentColor', 
  top = null, 
  animateOnReveal = false, // Default to immediate animation
  ...rest 
} = Astro.props;

const inlineStyle = top ? `top: ${top};` : '';
// Add data attribute and class based on animation type
const dataAttributes = animateOnReveal ? { 'data-animate-on-reveal': 'true' } : {};
const animationClass = animateOnReveal ? '' : 'animate-immediate';

// Generate unique IDs to avoid conflicts when multiple scribbles are on the same page
const uniqueId = Math.random().toString(36).substring(7);
const maskId = `scribble-mask-${uniqueId}`;
const pathId = `mask-path-${uniqueId}`;
---

<svg
  class={`highlight-svg ${animationClass}`}
  style={inlineStyle}
  width="351"
  height="37"
  viewBox="0 0 351 37"
  xmlns="http://www.w3.org/2000/svg"
  aria-hidden="true"
  {...dataAttributes}
  {...rest}
>
  <defs>
    <mask id={maskId} maskUnits="userSpaceOnUse">
      
      {/* âœ… THE CRITICAL FIX: The mask's background MUST be black for the
          animated white stroke to have a "reveal" effect. */}
      <rect width="100%" height="100%" fill="black"></rect>
      
      <path
        id={pathId}
        class="mask-path"
        pathLength="1"
        d="M233.736 1.4478C272.258 -0.406684 311.035 0.966279 348.662 10.4995C349.333 10.6689 349.621 11.0331 349.678 11.1166C350.012 11.6121 350.062 12.1476 350.035 12.5907C350.019 12.8598 349.89 13.9978 349 14.1415C348.385 14.239 343.988 13.8185 342.293 13.7273C334.316 13.3008 326.346 12.5897 318.376 11.7302C300.306 9.79087 282.27 8.18541 264.187 6.77406C254.034 5.98019 243.883 5.3758 233.744 4.9354C209.418 6.11302 185.191 8.57983 161.42 11.0898C170.918 11.717 179.647 12.3799 186.88 12.7625C199.077 13.4063 211.257 14.2339 223.447 15.4404C229.71 16.0575 235.967 16.7443 242.224 17.5891C242.918 17.6851 244.492 17.7577 245.257 17.8769C245.582 17.924 245.818 18.0085 245.925 18.0685C246.595 18.4464 246.702 19.2582 246.722 19.6683C246.734 19.9176 246.72 21.2796 245.619 21.5782C194.412 35.5733 140.162 22.7176 88.7599 36.3711C88.157 36.5314 87.5685 35.892 87.4491 34.9415C87.3297 33.9942 87.7224 33.0914 88.3273 32.931C136.74 20.072 187.679 30.7306 236.228 20.3191C231.942 19.8004 227.657 19.3449 223.368 18.9211C211.2 17.7172 199.042 16.8921 186.865 16.2476C174.612 15.6023 158.029 14.1205 140.696 13.3943C125.891 15.1352 111.1 17.0336 96.2917 18.7114C90.0444 19.4176 83.7924 20.0354 77.5475 20.751C74.9802 21.0431 68.3855 22.142 67.4153 21.8363C66.6612 21.5968 66.4565 20.7657 66.3995 20.3473C66.3394 19.8941 66.3506 19.3283 66.6732 18.7783C66.7729 18.6047 67.0769 18.2417 67.7136 17.9319C84.9354 9.58169 113.524 8.84442 140.353 9.92935C146.096 9.251 151.84 8.5979 157.588 7.99209C170.745 6.6009 184.048 5.20217 197.433 4.01263C159.601 3.68857 121.806 5.2463 84.0211 7.44192C68.1566 8.36487 25.4383 12.336 8.65345 15.2138C8.86914 15.5391 9.00402 15.9963 9.005 16.4986C9.00564 17.459 8.50568 18.2196 7.88918 18.1939C4.40424 18.0461 2.38356 17.7847 1.57686 17.4772C1.07451 17.287 0.794364 16.9668 0.662839 16.756C0.340665 16.2475 0.267481 15.6937 0.312105 15.1647C0.340568 14.8353 0.424483 14.4726 0.632335 14.1347C0.770723 13.903 1.11528 13.5451 1.71325 13.2902C8.26151 10.512 64.9862 5.05456 83.8758 3.95526C133.793 1.05644 183.724 -0.730685 233.736 1.4478ZM81.2069 16.8371C90.9068 14.4695 102.329 13.3959 114.27 13.0839C108.205 13.8193 102.138 14.5422 96.0677 15.2303C91.1163 15.7932 86.161 16.2962 81.2069 16.8371ZM279.916 4.5662C292.768 5.65792 305.61 6.86999 318.467 8.25222C319.952 8.40973 321.434 8.56415 322.919 8.71535C308.678 6.42699 294.319 5.13103 279.916 4.5662Z"
      ></path>
    </mask>
  </defs>
  <path
    fill={color}
    mask={`url(#${maskId})`}
    d="M233.736 1.4478C272.258 -0.406684 311.035 0.966279 348.662 10.4995C349.333 10.6689 349.621 11.0331 349.678 11.1166C350.012 11.6121 350.062 12.1476 350.035 12.5907C350.019 12.8598 349.89 13.9978 349 14.1415C348.385 14.239 343.988 13.8185 342.293 13.7273C334.316 13.3008 326.346 12.5897 318.376 11.7302C300.306 9.79087 282.27 8.18541 264.187 6.77406C254.034 5.98019 243.883 5.3758 233.744 4.9354C209.418 6.11302 185.191 8.57983 161.42 11.0898C170.918 11.717 179.647 12.3799 186.88 12.7625C199.077 13.4063 211.257 14.2339 223.447 15.4404C229.71 16.0575 235.967 16.7443 242.224 17.5891C242.918 17.6851 244.492 17.7577 245.257 17.8769C245.582 17.924 245.818 18.0085 245.925 18.0685C246.595 18.4464 246.702 19.2582 246.722 19.6683C246.734 19.9176 246.72 21.2796 245.619 21.5782C194.412 35.5733 140.162 22.7176 88.7599 36.3711C88.157 36.5314 87.5685 35.892 87.4491 34.9415C87.3297 33.9942 87.7224 33.0914 88.3273 32.931C136.74 20.072 187.679 30.7306 236.228 20.3191C231.942 19.8004 227.657 19.3449 223.368 18.9211C211.2 17.7172 199.042 16.8921 186.865 16.2476C174.612 15.6023 158.029 14.1205 140.696 13.3943C125.891 15.1352 111.1 17.0336 96.2917 18.7114C90.0444 19.4176 83.7924 20.0354 77.5475 20.751C74.9802 21.0431 68.3855 22.142 67.4153 21.8363C66.6612 21.5968 66.4565 20.7657 66.3995 20.3473C66.3394 19.8941 66.3506 19.3283 66.6732 18.7783C66.7729 18.6047 67.0769 18.2417 67.7136 17.9319C84.9354 9.58169 113.524 8.84442 140.353 9.92935C146.096 9.251 151.84 8.5979 157.588 7.99209C170.745 6.6009 184.048 5.20217 197.433 4.01263C159.601 3.68857 121.806 5.2463 84.0211 7.44192C68.1566 8.36487 25.4383 12.336 8.65345 15.2138C8.86914 15.5391 9.00402 15.9963 9.005 16.4986C9.00564 17.459 8.50568 18.2196 7.88918 18.1939C4.40424 18.0461 2.38356 17.7847 1.57686 17.4772C1.07451 17.287 0.794364 16.9668 0.662839 16.756C0.340665 16.2475 0.267481 15.6937 0.312105 15.1647C0.340568 14.8353 0.424483 14.4726 0.632335 14.1347C0.770723 13.903 1.11528 13.5451 1.71325 13.2902C8.26151 10.512 64.9862 5.05456 83.8758 3.95526C133.793 1.05644 183.724 -0.730685 233.736 1.4478ZM81.2069 16.8371C90.9068 14.4695 102.329 13.3959 114.27 13.0839C108.205 13.8193 102.138 14.5422 96.0677 15.2303C91.1163 15.7932 86.161 16.2962 81.2069 16.8371ZM279.916 4.5662C292.768 5.65792 305.61 6.86999 318.467 8.25222C319.952 8.40973 321.434 8.56415 322.919 8.71535C308.678 6.42699 294.319 5.13103 279.916 4.5662Z"
  ></path>
</svg>

<!-- Import the observer script if needed for reveal animation -->
{animateOnReveal && (
  <script src="@/scripts/animateOnRevealObserver.ts"></script>
)}

<style is:global>
  @keyframes draw {
    to {
      stroke-dashoffset: 0;
    }
  }
</style>

<style>
  .highlight-svg {
    position: absolute;
    bottom: -0.2em;
    left: 0;
    width: 102%;
    height: auto;
    z-index: 10;
    transition: scale 0.3s ease;
    pointer-events: none;
  }
  
  .mask-path {
    stroke: white;
    stroke-width: 16;
    stroke-linecap: round;
    stroke-linejoin: round;
    fill: none;
    stroke-dasharray: 1;
  }
  
  /* Immediate animation for hero section */
  .animate-immediate .mask-path {
    stroke-dashoffset: -1;
    animation: draw 1s ease-out 0.3s forwards;
  }
  
  /* Hidden by default for reveal animation */
  [data-animate-on-reveal="true"] {
    opacity: 0;
  }
  
  [data-animate-on-reveal="true"] .mask-path {
    stroke-dashoffset: -1; /* Changed from 1 to -1 to match hero direction */
  }
  
  /* Animation triggered by intersection observer */
  .animate-draw {
    opacity: 1;
    transition: opacity 0.2s ease;
  }
  
  .animate-draw .mask-path {
    animation: draw 1s ease-out 0.2s forwards;
  }
</style>